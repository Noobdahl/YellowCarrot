// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YellowCarrot.Data;

#nullable disable

namespace YellowCarrot.Migrations.RecipeDb
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20221216195120_InitialWithSeed")]
    partial class InitialWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeTag", b =>
                {
                    b.Property<int>("RecipesRecipeId")
                        .HasColumnType("int");

                    b.Property<string>("TagsName")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecipesRecipeId", "TagsName");

                    b.HasIndex("TagsName");

                    b.ToTable("RecipeTag");

                    b.HasData(
                        new
                        {
                            RecipesRecipeId = 1,
                            TagsName = "4/5"
                        },
                        new
                        {
                            RecipesRecipeId = 2,
                            TagsName = "foodForTravels"
                        },
                        new
                        {
                            RecipesRecipeId = 3,
                            TagsName = "gin"
                        },
                        new
                        {
                            RecipesRecipeId = 3,
                            TagsName = "neutralTonic"
                        });
                });

            modelBuilder.Entity("YellowCarrot.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Name = "Spaghetti",
                            Quantity = "250g",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 2,
                            Name = "Bolognese",
                            Quantity = "100g",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 3,
                            Name = "Ketchup",
                            Quantity = "1 line",
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 4,
                            Name = "Elven bread",
                            Quantity = "200g",
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 5,
                            Name = "Mallorn leaves",
                            Quantity = "3",
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 6,
                            Name = "Hellström Gin",
                            Quantity = "5cl",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 7,
                            Name = "Neutral Tonic (ekobryggeriet original)",
                            Quantity = "10cl",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 8,
                            Name = "Is",
                            Quantity = "Mycket",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 9,
                            Name = "Timjan",
                            Quantity = "Ett par kvistar",
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 10,
                            Name = "Äpple",
                            Quantity = "Ett klyfta",
                            RecipeId = 3
                        });
                });

            modelBuilder.Entity("YellowCarrot.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("picUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Name = "Darth Vader's Bolognese",
                            UserId = 4,
                            picUrl = "https://images.immediate.co.uk/production/volatile/sites/30/2020/08/the-best-spaghetti-bolognese-7e83155.jpg?quality=90&webp=true&resize=375,341"
                        },
                        new
                        {
                            RecipeId = 2,
                            Name = "Lembas bread",
                            UserId = 3,
                            picUrl = "http://4.bp.blogspot.com/_cd6_MFUGTUE/SU6yFC_7eHI/AAAAAAAAAII/dgbwkYf3cZs/w1200-h630-p-k-no-nu/_DSC6981.jpg"
                        },
                        new
                        {
                            RecipeId = 3,
                            Name = "Gin & Tonic med äpple",
                            UserId = 5,
                            picUrl = "https://i.ibb.co/fHtXgjx/image.png"
                        });
                });

            modelBuilder.Entity("YellowCarrot.Models.Step", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("StepId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Steps");

                    b.HasData(
                        new
                        {
                            StepId = 1,
                            Description = "Use the force.",
                            Order = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            StepId = 2,
                            Description = "Draw a lightsaber with ketchup.",
                            Order = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            StepId = 3,
                            Description = "Ask any elf for bread.",
                            Order = 1,
                            RecipeId = 2
                        },
                        new
                        {
                            StepId = 4,
                            Description = "Wrap bread in leaves.",
                            Order = 2,
                            RecipeId = 2
                        },
                        new
                        {
                            StepId = 5,
                            Description = "Ta ett kallt glas.",
                            Order = 1,
                            RecipeId = 3
                        },
                        new
                        {
                            StepId = 6,
                            Description = "Fyll upp glaset med mycket is.",
                            Order = 2,
                            RecipeId = 3
                        },
                        new
                        {
                            StepId = 7,
                            Description = "Tillsätt gin.",
                            Order = 3,
                            RecipeId = 3
                        },
                        new
                        {
                            StepId = 8,
                            Description = "Tillsätt tonic.",
                            Order = 4,
                            RecipeId = 3
                        },
                        new
                        {
                            StepId = 9,
                            Description = "Sätt i ett par kvistar timjan.",
                            Order = 5,
                            RecipeId = 3
                        },
                        new
                        {
                            StepId = 10,
                            Description = "Lägg i en klyfta äpple.",
                            Order = 6,
                            RecipeId = 3
                        });
                });

            modelBuilder.Entity("YellowCarrot.Models.Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Name");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Name = "4/5"
                        },
                        new
                        {
                            Name = "foodForTravels"
                        },
                        new
                        {
                            Name = "gin"
                        },
                        new
                        {
                            Name = "neutralTonic"
                        });
                });

            modelBuilder.Entity("RecipeTag", b =>
                {
                    b.HasOne("YellowCarrot.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesRecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YellowCarrot.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YellowCarrot.Models.Ingredient", b =>
                {
                    b.HasOne("YellowCarrot.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("YellowCarrot.Models.Step", b =>
                {
                    b.HasOne("YellowCarrot.Models.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("YellowCarrot.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
